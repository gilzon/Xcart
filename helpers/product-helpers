var db = require('../config/connection')
var collection = require('../config/collections');
const { ObjectId } = require('bson');
const { response } = require('express');

module.exports = {

    addProduct: (product, Callback) => {
        // console.log(product);
        db.get().collection('products').insertOne(product).then((data) => {
            // console.log(data)
            Callback(data.insertedId)
        })
    },
    getAllProducts: () => {
        return new Promise(async (resolve, reject) => {
            let products = await db.get().collection(collection.PRODUCT_COLLECTION).find().toArray()
            resolve(products)

        })
    },
    deleteProduct: (prodId) => {
        return new Promise((resolve, reject) => {
            console.log(prodId);
            console.log(ObjectId(prodId));
            db.get().collection(collection.PRODUCT_COLLECTION).deleteOne({ _id: ObjectId(prodId) }).then((response) => {
                console.log(response)
                resolve(response)
                    ;
            })
        })
    },
    getProductDetails: (prodId) => {
        return new Promise((resolve, reject) => {
            db.get().collection(collection.PRODUCT_COLLECTION).findOne({ _id: ObjectId(prodId) }).then((product) => {
                resolve(product)
            })
        })

    },
    updateProduct: (prodId, proDetails) => {
        return new Promise((resolve, reject) => {

            db.get().collection(collection.PRODUCT_COLLECTION)
                .updateOne({ _id: ObjectId(prodId) }, {
                    $set: {
                        Name: proDetails.Name,
                        Description: proDetails.Description,
                        price: proDetails.price,
                        Category: proDetails.Category,

                    }
                }).then((response) => {

                    resolve()
                })
        }
        )
    }


}
